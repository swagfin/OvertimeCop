@page "/Departments/Edit/{Id:int}"
@inject DepartmentService departmentService
@inject NavigationManager nav

<h3 class="ui header blue">Edit Department Details</h3>
<EditForm OnValidSubmit="Save" Model="model" class="ui form segment">
    @if (IsLoading)
    {
        <div class="ui active inverted dimmer">
            <div class="ui text loader">Updating information. Just a sec....</div>
        </div>
    }

    <DataAnnotationsValidator />

    <div class="field">
        <label>Department Name</label>
        <InputText @bind-Value="@model.Name" />
        <ValidationMessage For="@(()=>model.Name)" />
    </div>
     <p align="center">
    <button class="ui button positive @(IsLoading ? "loading" : "")" type="submit">Update Department</button>
     </p>
</EditForm>
@code
{
    [Parameter]
    public int Id { get; set; }
    private Department model { get; set; } = new Department();
    private bool IsLoading { get; set; } = false;

    async void Save()
    {
        IsLoading = true;
        await departmentService.UpdateAsync(model);
        nav.NavigateTo("/Departments");
    }

    protected override async Task OnInitializedAsync()
    {
        //Get Model By Id
        model = await departmentService.GetByIdAsync(Id);
        if (model==null)
            nav.NavigateTo("/Departments");
    }



}